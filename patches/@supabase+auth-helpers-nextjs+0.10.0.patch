diff --git a/node_modules/@supabase/auth-helpers-nextjs/dist/index.js b/node_modules/@supabase/auth-helpers-nextjs/dist/index.js
index 5d38b50..49f952e 100644
--- a/node_modules/@supabase/auth-helpers-nextjs/dist/index.js
+++ b/node_modules/@supabase/auth-helpers-nextjs/dist/index.js
@@ -154,12 +154,12 @@ var NextMiddlewareAuthStorageAdapter = class extends import_auth_helpers_shared3
   getCookie(name) {
     var _a;
     const setCookie = (0, import_set_cookie_parser2.splitCookiesString)(
-      ((_a = this.context.res.headers.get("set-cookie")) == null ? void 0 : _a.toString()) ?? ""
+      ((_a = this.context.res.headers?.get("set-cookie")?.value) == null ? void 0 : _a.toString()) ?? ""
     ).map((c) => (0, import_auth_helpers_shared3.parseCookies)(c)[name]).find((c) => !!c);
     if (setCookie) {
       return setCookie;
     }
-    const cookies = (0, import_auth_helpers_shared3.parseCookies)(this.context.req.headers.get("cookie") ?? "");
+    const cookies = (0, import_auth_helpers_shared3.parseCookies)(this.context.req.headers?.get("cookie")?.value ?? "");
     return cookies[name];
   }
   setCookie(name, value) {
@@ -219,8 +219,8 @@ var NextServerComponentAuthStorageAdapter = class extends import_auth_helpers_sh
   }
   getCookie(name) {
     var _a;
-    const nextCookies = this.context.cookies();
-    return (_a = nextCookies.get(name)) == null ? void 0 : _a.value;
+    const nextCookies = (this.context && typeof this.context.cookies==="function" ? this.context.cookies() : require("next/headers").cookies());
+    return (_a = nextCookies?.get(name)?.value) == null ? void 0 : _a.value;
   }
   setCookie(name, value) {
   }
@@ -263,15 +263,15 @@ var NextRouteHandlerAuthStorageAdapter = class extends import_auth_helpers_share
   }
   getCookie(name) {
     var _a;
-    const nextCookies = this.context.cookies();
-    return (_a = nextCookies.get(name)) == null ? void 0 : _a.value;
+    const nextCookies = (this.context && typeof this.context.cookies==="function" ? this.context.cookies() : require("next/headers").cookies());
+    return (_a = nextCookies?.get(name)?.value) == null ? void 0 : _a.value;
   }
   setCookie(name, value) {
-    const nextCookies = this.context.cookies();
+    const nextCookies = (this.context && typeof this.context.cookies==="function" ? this.context.cookies() : require("next/headers").cookies());
     nextCookies.set(name, value, this.cookieOptions);
   }
   deleteCookie(name) {
-    const nextCookies = this.context.cookies();
+    const nextCookies = (this.context && typeof this.context.cookies==="function" ? this.context.cookies() : require("next/headers").cookies());
     nextCookies.set(name, "", {
       ...this.cookieOptions,
       maxAge: 0
